apiVersion: v1
kind: ConfigMap
metadata:
  name: env-config
  namespace: blacklist
data:
  springdb: |-
    <?xml version="1.0" encoding="UTF-8"?>
        <beans xmlns="http://www.springframework.org/schema/beans"    
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"    
            xmlns:context="http://www.springframework.org/schema/context"    
            xmlns:mvc="http://www.springframework.org/schema/mvc"    
            xsi:schemaLocation="http://www.springframework.org/schema/beans      
                                http://www.springframework.org/schema/beans/spring-beans-3.1.xsd      
                                http://www.springframework.org/schema/context      
                                http://www.springframework.org/schema/context/spring-context-3.1.xsd      
                                http://www.springframework.org/schema/mvc      
                                http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

        <!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
                <property name="locationffffffffff" value="classpath:jdbc.properties" />
            </bean>-->

            <!--solr-->
            <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
                <property name="driverClassName" value="org.postgresql.Driver"/>
                <property name="url" value="jdbc:postgresql://pg-svc:4432/blacklist_saas?autoReconnect=true&amp;allowMultiQueries=true"/>
                <property name="username" value="postgres"/>
                <property name="password" value="black123"/>

                <property name="initialSize" value="10"/>
                <property name="minIdle" value="5"/>
                <property name="maxActive" value="400"/>

                <property name="maxWait" value="60000"/>
                <property name="timeBetweenEvictionRunsMillis" value="60000"/>
                <property name="minEvictableIdleTimeMillis" value="300000"/>

                <property name="validationQuery" value="select version();"/>
                <property name="testWhileIdle" value="true"/>
                <property name="testOnBorrow" value="false"/>
                <property name="testOnReturn" value="false"/>

                <property name="poolPreparedStatements" value="false"/>
                <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

                <property name="removeAbandoned" value="true"/>
                <property name="removeAbandonedTimeout" value="1800"/>
                <property name="logAbandoned" value="true"/>

                <property name="filters" value="stat"/>
            </bean>

            <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
                <property name="dataSource" ref="dataSource"/>
                <property name="mapperLocations" value="classpath:com/elensdata/black/dao/*.xml"></property>
            </bean>

            <!--solr-->
            <bean id="httpSolrClient" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
                <constructor-arg index="0" value="${solr.server}"/>
                <property name="parser">
                    <bean class="org.apache.solr.client.solrj.impl.XMLResponseParser"/>
                </property>
            </bean>

            <bean id="httpMasterSolrClient" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
                <constructor-arg index="0" value="${solr.master.server}"/>
                <property name="parser">
                    <bean class="org.apache.solr.client.solrj.impl.XMLResponseParser"/>
                </property>
            </bean>

            <!-- redis-->
            <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
                <property name="maxIdle" value="3000"/>
                <property name="maxWaitMillis" value="5000"/>
                <property name="maxTotal" value="5000"/>
                <property name="testOnBorrow" value="true"/>
                <property name="testWhileIdle" value="true"/>
            </bean>
            <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
                <property name="poolConfig" ref="poolConfig"/>
                <property name="port" value="6379"/>
                <property name="hostName" value=""/>
                <property name="password" value=""/>
                <property name="timeout" value="5000"/>
                <property name="usePool" value="true"/>
                <property name="database" value="3" />
            </bean>
            <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
                <property name="connectionFactory" ref="connectionFactory"/>
                <property name="keySerializer">
                    <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
                </property>
                <property name="valueSerializer">
                    <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
                </property>
                <!--<property name="enableTransactionSupport" value="true"></property>-->
            </bean>
            <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
                <property name="connectionFactory" ref="connectionFactory"/>
            </bean>
        </beans>
